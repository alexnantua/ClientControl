package Principal;

import Dao.AddCliente;
import Dao.BuscaCliente;
import Logica.Cliente;
import com.jgoodies.looks.plastic.PlasticLookAndFeel;
import com.jgoodies.looks.plastic.theme.DarkStar;
import java.awt.SystemColor;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alexandre Nântua
 */
public class Tela_Principal extends javax.swing.JFrame {

    /**
     * Creates new form Tela_Principal
     */
    public Tela_Principal() throws SQLException {
        try {
            initComponents();
            setLocationRelativeTo(null);
            setIcon();

            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String stringCon = "jdbc:sqlserver://babyhost.ddns.net;databaseName=ClientControl;user=alexnantua;password=357900";
            Connection con = DriverManager.getConnection(stringCon);
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select "
                    + "Nome, "
                    //                    + "Telefone1 as [Telefone 1], "
                    //                    + "Telefone2 as [Telefone 2], "
                    //                    + "Email as [E-mail], "
                    //                    + "Endereco as [Endereço], "
                    + "NSerie as [Número de Série], "
                    + "Marca, "
                    + "Modelo, "
                    //                    + "CONVERT(char, DataRec,103) as [Data de Recebimento], "
                    //                    + "CONVERT(char, DataEnt,103) as [Data de Entrega], "
                    + "Garantia, "
                    //                    + "CONVERT(char, DataGar,103) as [Validade da Garantia], "
                    + "Status, "
                    + "Observacoes as [Observações], "
                    + "Cod from Clientes ORDER BY Status");

            ResultSetMetaData rsmetadata = rs.getMetaData();
            int coluna = rsmetadata.getColumnCount();

            DefaultTableModel dtm = new DefaultTableModel();
            Vector coluna_name = new Vector();
            Vector data_rows = new Vector();

            for (int i = 1; i < coluna; i++) {
                coluna_name.addElement(rsmetadata.getColumnName(i));
            }

            dtm.setColumnIdentifiers(coluna_name);

            while (rs.next()) {
                data_rows = new Vector();
                for (int j = 1; j < coluna; j++) {
                    data_rows.addElement(rs.getString(j));
                }
                dtm.addRow(data_rows);
            }

            ListaClientes.setModel(dtm);

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, ex + "\n\nEntre em contato com o suporte.");
            System.exit(0);
        } catch (SQLException ex2) {
            ex2.printStackTrace();
            JOptionPane.showMessageDialog(null, "Falha na conexão TCP/IP com o Banco de Dados.\n\nEntre em contato com o suporte.");
            System.exit(0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ClientControl = new javax.swing.JLabel();
        Cadastro = new javax.swing.JLabel();
        Lista = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        Garantia = new javax.swing.JLabel();
        Modelo_Texto = new javax.swing.JTextField();
        Tel1 = new javax.swing.JLabel();
        DataRec = new javax.swing.JLabel();
        Nome = new javax.swing.JLabel();
        Modelo = new javax.swing.JLabel();
        Marca = new javax.swing.JLabel();
        Email = new javax.swing.JLabel();
        Marca_Texto = new javax.swing.JTextField();
        NSerie = new javax.swing.JLabel();
        Atualizar = new javax.swing.JButton();
        Garantia_Texto = new javax.swing.JTextField();
        Tel2 = new javax.swing.JLabel();
        NSerie_Texto = new javax.swing.JTextField();
        Endereco_Texto = new javax.swing.JTextField();
        Observacoes = new javax.swing.JLabel();
        DataEnt = new javax.swing.JLabel();
        Endereco = new javax.swing.JLabel();
        Cadastrar = new javax.swing.JButton();
        Nome_Texto = new javax.swing.JTextField();
        Email_Texto = new javax.swing.JTextField();
        ValidadeGarantia = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Observacoes_Texto = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Status_Texto = new javax.swing.JComboBox();
        Limpar = new javax.swing.JButton();
        Tel1_Texto = new javax.swing.JTextField();
        Tel2_Texto = new javax.swing.JTextField();
        Excluir = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        DataRec_Texto = new com.toedter.calendar.JDateChooser();
        DataEnt_Texto = new com.toedter.calendar.JDateChooser();
        ValidadeGarantia_Texto = new com.toedter.calendar.JDateChooser();
        jSeparator1 = new javax.swing.JSeparator();
        Sair = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane4 = new javax.swing.JScrollPane();
        ListaClientes = new javax.swing.JTable();
        AtualizarLista = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        Arquivo = new javax.swing.JMenu();
        Sair_Menu = new javax.swing.JMenuItem();
        Sobre = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CLIENT CONTROL - Versão 1.2");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        ClientControl.setFont(new java.awt.Font("Stencil", 1, 36)); // NOI18N
        ClientControl.setForeground(new java.awt.Color(255, 255, 255));
        ClientControl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ClientControl.setText("CLIENT CONTROL");

        Cadastro.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        Cadastro.setText("CADASTRO");

        Lista.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        Lista.setText("LISTA");

        Garantia.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Garantia.setForeground(new java.awt.Color(255, 0, 0));
        Garantia.setText("Garantia:");

        Tel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Tel1.setForeground(new java.awt.Color(255, 0, 0));
        Tel1.setText("Telefone 1:");

        DataRec.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        DataRec.setForeground(new java.awt.Color(255, 0, 0));
        DataRec.setText("Data de Recebimento:");

        Nome.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Nome.setForeground(new java.awt.Color(255, 0, 0));
        Nome.setText("Nome:");

        Modelo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Modelo.setForeground(new java.awt.Color(255, 0, 0));
        Modelo.setText("Modelo:");

        Marca.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Marca.setForeground(new java.awt.Color(255, 0, 0));
        Marca.setText("Marca:");

        Email.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Email.setForeground(new java.awt.Color(255, 0, 0));
        Email.setText("E-mail:");

        NSerie.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        NSerie.setForeground(new java.awt.Color(255, 0, 0));
        NSerie.setText("Número de Série:");

        Atualizar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Atualizar.setText("ATUALIZAR");
        Atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AtualizarActionPerformed(evt);
            }
        });

        Tel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Tel2.setForeground(new java.awt.Color(255, 0, 0));
        Tel2.setText("Telefone 2:");

        Observacoes.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Observacoes.setForeground(new java.awt.Color(255, 0, 0));
        Observacoes.setText("Observações:");

        DataEnt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        DataEnt.setForeground(new java.awt.Color(255, 0, 0));
        DataEnt.setText("Data de Entrega:");

        Endereco.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Endereco.setForeground(new java.awt.Color(255, 0, 0));
        Endereco.setText("Endereço:");

        Cadastrar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Cadastrar.setText("CADASTRAR");
        Cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CadastrarActionPerformed(evt);
            }
        });

        ValidadeGarantia.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ValidadeGarantia.setForeground(new java.awt.Color(255, 0, 0));
        ValidadeGarantia.setText("Validade da Garantia:");

        jScrollPane3.setViewportView(Observacoes_Texto);

        jLabel1.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("DADOS DO CLIENTE");

        jLabel2.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setText("DADOS DO EQUIPAMENTO");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("Status:");

        Status_Texto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1- RECEBIDO", "2- EM ANÁLISE", "3- EM MANUTENÇÃO", "4- AGUARDANDO PEÇA", "5- EM ESPERA", "6- PRONTO PARA ENTREGA", "7- ENTREGUE" }));

        Limpar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Limpar.setText("LIMPAR");
        Limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimparActionPerformed(evt);
            }
        });

        Excluir.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Excluir.setText("EXCLUIR");
        Excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcluirActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(153, 0, 0));
        jLabel4.setText("*Obrigatório colocar todas as datas ou o cadastro não será realizado. Ex.: 01/01/0001.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Limpar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Cadastrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Atualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Excluir))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DataRec)
                            .addComponent(NSerie))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(NSerie_Texto, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(507, 507, 507))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(DataRec_Texto, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(DataEnt)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(DataEnt_Texto, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addComponent(Observacoes)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 611, Short.MAX_VALUE))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Nome)
                            .addComponent(Email))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Email_Texto, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                            .addComponent(Nome_Texto))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(Tel1)
                                        .addGap(5, 5, 5)
                                        .addComponent(Tel1_Texto, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(Tel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Tel2_Texto, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(Garantia)
                                            .addComponent(Marca))
                                        .addGap(14, 14, 14)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(Garantia_Texto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(22, 22, 22)
                                                .addComponent(ValidadeGarantia))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(Marca_Texto, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(Modelo)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Modelo_Texto, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(ValidadeGarantia_Texto, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Endereco)
                                .addGap(12, 12, 12)
                                .addComponent(Endereco_Texto))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Status_Texto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(5, 5, 5))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Nome_Texto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Nome))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Tel1)
                                .addComponent(Tel1_Texto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Tel2)
                                .addComponent(Tel2_Texto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Email_Texto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Email))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Endereco_Texto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Endereco)))
                .addGap(12, 12, 12)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NSerie)
                            .addComponent(NSerie_Texto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DataRec, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DataEnt, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DataRec_Texto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DataEnt_Texto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Modelo)
                            .addComponent(Marca_Texto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Modelo_Texto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Marca))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Garantia)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(ValidadeGarantia)
                                .addComponent(Garantia_Texto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ValidadeGarantia_Texto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(Status_Texto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Observacoes))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Atualizar)
                            .addComponent(Excluir)
                            .addComponent(Cadastrar)
                            .addComponent(Limpar))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4))))
        );

        Sair.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        Sair.setText("SAIR");
        Sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SairActionPerformed(evt);
            }
        });

        ListaClientes.setAutoCreateRowSorter(true);
        ListaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        ListaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListaClientesMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(ListaClientes);

        AtualizarLista.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        AtualizarLista.setText("ATUALIZAR LISTA");
        AtualizarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AtualizarListaActionPerformed(evt);
            }
        });

        Arquivo.setText("ARQUIVO");

        Sair_Menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Principal/sair.png"))); // NOI18N
        Sair_Menu.setText("Sair");
        Sair_Menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sair_MenuActionPerformed(evt);
            }
        });
        Arquivo.add(Sair_Menu);

        jMenuBar1.add(Arquivo);

        Sobre.setText("SOBRE");
        Sobre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SobreMouseClicked(evt);
            }
        });
        jMenuBar1.add(Sobre);

        jMenu1.setText("BACKUP");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ClientControl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Lista)
                            .addComponent(Cadastro)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(AtualizarLista)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Sair))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator3))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ClientControl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Cadastro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Lista)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Sair)
                    .addComponent(AtualizarLista))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    Cliente c1 = new Cliente();

    private static String URL = "jdbc:sqlserver://babyhost.ddns.net;"
            + "databaseName=ClientControl";
    private static String usuario = "alexnantua";
    private static String password = "357900";
    private static String DRIVER = "com.microsoft.sqlserver.jdbc.SQLServerDriver";

    public static Connection getConexao() throws SQLException {
        try {
            Class.forName(DRIVER);
            System.out.println("Conectado ao banco!");
            Connection con = DriverManager.getConnection(URL, usuario, password);

            return con;

        } catch (ClassNotFoundException e) {
            throw new SQLException(e.getMessage());
        }
    }
    private void CadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CadastrarActionPerformed
        String N = Nome_Texto.getText().trim();
//        String T1 = Tel1_Texto.getText().trim();
//        String T2 = Tel2_Texto.getText().trim();
//        String E = Email_Texto.getText().trim();
//        String En = Endereco_Texto.getText().trim();
        String NS = NSerie_Texto.getText().trim();
        String Ma = Marca_Texto.getText().trim();
        String Mo = Modelo_Texto.getText().trim();
//        String DR = DataRec_Texto.getDate().toString();
//        String DE = DataEnt_Texto.getDate().toString();
        String Ga = Garantia_Texto.getText().trim();
//        String DG = ValidadeGarantia_Texto.getDate().toString();
        String St = Status_Texto.getSelectedItem().toString();
        String Ob = Observacoes_Texto.getText().trim();

        DefaultTableModel val = (DefaultTableModel) ListaClientes.getModel();
        val.addRow(new String[]{N, NS, Ma, Mo,
            Ga, St, Ob});

        try {
            c1.setNome(Nome_Texto.getText());
            c1.setTelefone1(Tel1_Texto.getText());
            c1.setTelefone2(Tel2_Texto.getText());
            c1.setEmail(Email_Texto.getText());
            c1.setEndereco(Endereco_Texto.getText());
            c1.setNSerie(NSerie_Texto.getText());
            c1.setMarca(Marca_Texto.getText());
            c1.setModelo(Modelo_Texto.getText());
            c1.setDataRec(new java.sql.Date((DataRec_Texto.getDate()).getTime()));
            c1.setDataEnt(new java.sql.Date((DataEnt_Texto.getDate()).getTime()));
            c1.setGarantia(Garantia_Texto.getText());
            c1.setDataGar(new java.sql.Date((ValidadeGarantia_Texto.getDate()).getTime()));
            c1.setObservacoes(Observacoes_Texto.getText());
            c1.setStatus(Status_Texto.getSelectedItem().toString());

            //-----------------------------------------------------------------------------------------------
            //TODO RETORNO DE DATA NULA
//            if (DataRec_Texto == null) {
//                JOptionPane.showMessageDialog(null, "CAMPO 'datarec' OBRIGATÓRIO.");
//            } else{
//                c1.setDataRec(new java.sql.Date((DataRec_Texto.getDate()).getTime()));
//            }
//------------------------------------------------------------------------------------------------------------
            if (Nome_Texto.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "CAMPO 'Nome' OBRIGATÓRIO.");

            } else {

//-------------------------------------------------------------------------------------------------------------
                AddCliente dao = new AddCliente();
                dao.adiciona(c1);
                JOptionPane.showMessageDialog(null, "Cliente adicionado com sucesso!");
//-------------------------------------------------------------------------------------------------------------
//        new Cadastro_Ok().setVisible(true);

                Nome_Texto.requestFocus();
                Nome_Texto.setText("");
                Tel1_Texto.setText("");
                Tel2_Texto.setText("");
                Email_Texto.setText("");
                Endereco_Texto.setText("");
                NSerie_Texto.setText("");
                Marca_Texto.setText("");
                Modelo_Texto.setText("");
                DataRec_Texto.setDate(null);
                DataEnt_Texto.setDate(null);
                Garantia_Texto.setText("");
                ValidadeGarantia_Texto.setDate(null);
                Observacoes_Texto.setText("");
                Status_Texto.setSelectedItem("1- RECEBIDO");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

    }//GEN-LAST:event_CadastrarActionPerformed

    private void SairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_SairActionPerformed

    private void ListaClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListaClientesMouseClicked
        Nome_Texto.setText(ListaClientes.getValueAt(ListaClientes.getSelectedRow(), 0).toString());
//        Tel1_Texto.setText(ListaClientes.getValueAt(ListaClientes.getSelectedRow(), 1).toString());
//        Tel2_Texto.setText(ListaClientes.getValueAt(ListaClientes.getSelectedRow(), 2).toString());
//        Email_Texto.setText(ListaClientes.getValueAt(ListaClientes.getSelectedRow(), 3).toString());
//        Endereco_Texto.setText(ListaClientes.getValueAt(ListaClientes.getSelectedRow(), 4).toString());
        NSerie_Texto.setText(ListaClientes.getValueAt(ListaClientes.getSelectedRow(), 1).toString());
        Marca_Texto.setText(ListaClientes.getValueAt(ListaClientes.getSelectedRow(), 2).toString());
        Modelo_Texto.setText(ListaClientes.getValueAt(ListaClientes.getSelectedRow(), 3).toString());
        Garantia_Texto.setText(ListaClientes.getValueAt(ListaClientes.getSelectedRow(), 4).toString());
        Status_Texto.setSelectedItem(ListaClientes.getValueAt(ListaClientes.getSelectedRow(), 5).toString());
        Observacoes_Texto.setText(ListaClientes.getValueAt(ListaClientes.getSelectedRow(), 6).toString());

        try {
            BuscaCliente dao = new BuscaCliente();
            List<Cliente> clientes = dao.getLista();

            for (Cliente cliente : clientes) {
                if (Nome_Texto.getText().equals(cliente.getNome())) {
                    Tel1_Texto.setText(cliente.getTelefone1());
                    Tel2_Texto.setText(cliente.getTelefone2());
                    Email_Texto.setText(cliente.getEmail());
                    Endereco_Texto.setText(cliente.getEndereco());
                    NSerie_Texto.setText(cliente.getNSerie());
                    Marca_Texto.setText(cliente.getMarca());
                    Modelo_Texto.setText(cliente.getModelo());
                    DataRec_Texto.setDate(cliente.getDataRec());
                    DataEnt_Texto.setDate(cliente.getDataEnt());
                    Garantia_Texto.setText(cliente.getGarantia());
                    ValidadeGarantia_Texto.setDate(cliente.getDataGar());
                    Observacoes_Texto.setText(cliente.getObservacoes());
                    Status_Texto.setSelectedItem(cliente.getStatus());
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

    }//GEN-LAST:event_ListaClientesMouseClicked

    private void AtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AtualizarActionPerformed
        try {
            try {
                String v1 = Nome_Texto.getText();
                String v2 = Tel1_Texto.getText();
                String v3 = Tel2_Texto.getText();
                String v4 = Email_Texto.getText();
                String v5 = Endereco_Texto.getText();
                String v6 = NSerie_Texto.getText();
                String v7 = Marca_Texto.getText();
                String v8 = Modelo_Texto.getText();
                Date v9 = new java.sql.Date((DataRec_Texto.getDate()).getTime());
                Date v10 = new java.sql.Date((DataEnt_Texto.getDate()).getTime());
                String v11 = Garantia_Texto.getText();
                Date v12 = new java.sql.Date((ValidadeGarantia_Texto.getDate()).getTime());
                String v13 = Observacoes_Texto.getText();
                String v14 = Status_Texto.getSelectedItem().toString();

                //Registra JDBC driver
                Class.forName(DRIVER);

                //Abrindo a conexão
                Connection conn = DriverManager.getConnection(URL, usuario, password);

                java.sql.Statement stmt = conn.createStatement();
                stmt.executeUpdate("update Clientes set "
                        + "Nome = '" + v1 + "', "
                        + "Telefone1 ='" + v2 + "', "
                        + "Telefone2 = '" + v3 + "', "
                        + "Email = '" + v4 + "', "
                        + "Endereco = '" + v5 + "', "
                        + "NSerie = '" + v6 + "', "
                        + "Marca = '" + v7 + "', "
                        + "Modelo = '" + v8 + "', "
                        + "DataRec = '" + v9 + "', "
                        + "DataEnt = '" + v10 + "', "
                        + "Garantia = '" + v11 + "', "
                        + "DataGar = '" + v12 + "', "
                        + "Observacoes = '" + v13 + "', "
                        + "Status = '" + v14 + "' "
                        + "where Nome = '" + this.Nome_Texto.getText() + "'");

                JOptionPane.showMessageDialog(rootPane, "Cadastro atualizado!");

            } catch (SQLException | ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }

            //----------------------------------------------------------------------------------------------------
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String stringCon = "jdbc:sqlserver://babyhost.ddns.net;databaseName=ClientControl;user=alexnantua;password=357900";
            Connection con = DriverManager.getConnection(stringCon);
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select "
                    + "Nome, "
                    //                    + "Telefone1 as [Telefone 1], "
                    //                    + "Telefone2 as [Telefone 2], "
                    //                    + "Email as [E-mail], "
                    //                    + "Endereco as [Endereço], "
                    + "NSerie as [Número de Série], "
                    + "Marca, "
                    + "Modelo, "
                    //                    + "CONVERT(char, DataRec,103) as [Data de Recebimento], "
                    //                    + "CONVERT(char, DataEnt,103) as [Data de Entrega], "
                    + "Garantia, "
                    //                    + "CONVERT(char, DataGar,103) as [Validade da Garantia], "
                    + "Status, "
                    + "Observacoes as [Observações], "
                    + "Cod from Clientes");

            ResultSetMetaData rsmetadata = rs.getMetaData();
            int coluna = rsmetadata.getColumnCount();

            DefaultTableModel dtm = new DefaultTableModel();
            Vector coluna_name = new Vector();
            Vector data_rows = new Vector();

            for (int i = 1; i < coluna; i++) {
                coluna_name.addElement(rsmetadata.getColumnName(i));
            }

            dtm.setColumnIdentifiers(coluna_name);

            while (rs.next()) {
                data_rows = new Vector();
                for (int j = 1; j < coluna; j++) {
                    data_rows.addElement(rs.getString(j));
                }
                dtm.addRow(data_rows);
            }

            ListaClientes.setModel(dtm);

        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_AtualizarActionPerformed

    private void LimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimparActionPerformed
        Nome_Texto.requestFocus();
        Nome_Texto.setText("");
        Tel1_Texto.setText("");
        Tel2_Texto.setText("");
        Email_Texto.setText("");
        Endereco_Texto.setText("");
        NSerie_Texto.setText("");
        Marca_Texto.setText("");
        Modelo_Texto.setText("");
        DataRec_Texto.setDate(null);
        DataEnt_Texto.setDate(null);
        Garantia_Texto.setText("");
        ValidadeGarantia_Texto.setDate(null);
        Observacoes_Texto.setText("");
        Status_Texto.setSelectedItem("1- RECEBIDO");
    }//GEN-LAST:event_LimparActionPerformed

    private void ExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcluirActionPerformed
        if (JOptionPane.showConfirmDialog(null, "Você tem certeza?", "WARNING",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {

            ((DefaultTableModel) ListaClientes.getModel()).removeRow(ListaClientes.getSelectedRow());

            try {
                //Registra JDBC driver
                Class.forName(DRIVER);

                //Abrindo a conexão
                Connection conn = DriverManager.getConnection(URL, usuario, password);

                //Executa a query de exclusão
                java.sql.Statement st = conn.createStatement();
                st.executeUpdate("DELETE FROM Clientes WHERE Nome='" + this.Nome_Texto.getText() + "'");

                JOptionPane.showMessageDialog(rootPane, "Cadastro excluído");

                Nome_Texto.requestFocus();
                Nome_Texto.setText("");
                Tel1_Texto.setText("");
                Tel2_Texto.setText("");
                Email_Texto.setText("");
                Endereco_Texto.setText("");
                NSerie_Texto.setText("");
                Marca_Texto.setText("");
                Modelo_Texto.setText("");
                DataRec_Texto.setCalendar(null);
                DataEnt_Texto.setCalendar(null);
                Garantia_Texto.setText("");
                ValidadeGarantia_Texto.setCalendar(null);
                Observacoes_Texto.setText("");
                Status_Texto.setSelectedItem("1- RECEBIDO");

            } catch (SQLException | ClassNotFoundException e) {
                JOptionPane.showMessageDialog(null, e);
            }//Fim try
        }
    }//GEN-LAST:event_ExcluirActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //SkyBlue()
        //BrownSugar()
        //DarkStar()  
        //DesertGreen()
        //Silver()
        //ExperienceRoyale()
        try {
            PlasticLookAndFeel.setPlasticTheme(new DarkStar());
            try {
                UIManager.setLookAndFeel("com.jgoodies.looks.plastic.Plastic3DLookAndFeel");
            } catch (InstantiationException ex) {
                Logger.getLogger(Tela_Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                Logger.getLogger(Tela_Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedLookAndFeelException ex) {
                Logger.getLogger(Tela_Principal.class.getName()).log(Level.SEVERE, null, ex);
            }

        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
        }
        SwingUtilities.updateComponentTreeUI(this);

        jPanel1.setBackground(SystemColor.ORANGE);
    }//GEN-LAST:event_formWindowOpened

    private void AtualizarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AtualizarListaActionPerformed
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String stringCon = "jdbc:sqlserver://babyhost.ddns.net;databaseName=ClientControl;user=alexnantua;password=357900";
            Connection con = DriverManager.getConnection(stringCon);
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select "
                    + "Nome, "
                    //                    + "Telefone1 as [Telefone 1], "
                    //                    + "Telefone2 as [Telefone 2], "
                    //                    + "Email as [E-mail], "
                    //                    + "Endereco as [Endereço], "
                    + "NSerie as [Número de Série], "
                    + "Marca, "
                    + "Modelo, "
                    //                    + "CONVERT(char, DataRec,103) as [Data de Recebimento], "
                    //                    + "CONVERT(char, DataEnt,103) as [Data de Entrega], "
                    + "Garantia, "
                    //                    + "CONVERT(char, DataGar,103) as [Validade da Garantia], "
                    + "Status, "
                    + "Observacoes as [Observações], "
                    + "Cod from Clientes ORDER BY Status");

            ResultSetMetaData rsmetadata = rs.getMetaData();
            int coluna = rsmetadata.getColumnCount();

            DefaultTableModel dtm = new DefaultTableModel();
            Vector coluna_name = new Vector();
            Vector data_rows = new Vector();

            for (int i = 1; i < coluna; i++) {
                coluna_name.addElement(rsmetadata.getColumnName(i));
            }

            dtm.setColumnIdentifiers(coluna_name);

            while (rs.next()) {
                data_rows = new Vector();
                for (int j = 1; j < coluna; j++) {
                    data_rows.addElement(rs.getString(j));
                }
                dtm.addRow(data_rows);
            }

            ListaClientes.setModel(dtm);

        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

    }//GEN-LAST:event_AtualizarListaActionPerformed

    private void Sair_MenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sair_MenuActionPerformed
        System.exit(0);
    }//GEN-LAST:event_Sair_MenuActionPerformed

    private void SobreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SobreMouseClicked
        new Sobre().setVisible(true);
    }//GEN-LAST:event_SobreMouseClicked

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        //Data
        java.util.Date dataSistema = new java.util.Date();
        SimpleDateFormat formato = new SimpleDateFormat("ddMMyyyy");
        String DataAtual = formato.format(dataSistema);
        System.gc();

        //Hora
        Timer timer = new Timer(1000, new hora());
        timer.start();
        Calendar now = Calendar.getInstance();
        String HoraAtual = String.format("%1$tH%1$tM%1$tS", now);
        System.gc();

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String stringCon = "jdbc:sqlserver://babyhost.ddns.net;databaseName=ClientControl;user=alexnantua;password=357900";
            Connection con = DriverManager.getConnection(stringCon);
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("BACKUP DATABASE ClientControl TO DISK = 'D:\\Documentos\\CC\\ClientControl_BACKUP_"
                    + "" + DataAtual + "_" + HoraAtual + ".bak'");

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tela_Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Tela_Principal.class.getName()).log(Level.SEVERE, null, ex);
        }

        JOptionPane.showMessageDialog(rootPane, "BACKUP CONCLUÍDO!");
    }//GEN-LAST:event_jMenu1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela_Principal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela_Principal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela_Principal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela_Principal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Tela_Principal().setVisible(true);

                } catch (SQLException ex) {
                    Logger.getLogger(Tela_Principal.class
                            .getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Arquivo;
    private javax.swing.JButton Atualizar;
    private javax.swing.JButton AtualizarLista;
    private javax.swing.JButton Cadastrar;
    private javax.swing.JLabel Cadastro;
    private javax.swing.JLabel ClientControl;
    private javax.swing.JLabel DataEnt;
    private com.toedter.calendar.JDateChooser DataEnt_Texto;
    private javax.swing.JLabel DataRec;
    private com.toedter.calendar.JDateChooser DataRec_Texto;
    private javax.swing.JLabel Email;
    private javax.swing.JTextField Email_Texto;
    private javax.swing.JLabel Endereco;
    private javax.swing.JTextField Endereco_Texto;
    private javax.swing.JButton Excluir;
    private javax.swing.JLabel Garantia;
    private javax.swing.JTextField Garantia_Texto;
    private javax.swing.JButton Limpar;
    private javax.swing.JLabel Lista;
    private javax.swing.JTable ListaClientes;
    private javax.swing.JLabel Marca;
    private javax.swing.JTextField Marca_Texto;
    private javax.swing.JLabel Modelo;
    private javax.swing.JTextField Modelo_Texto;
    private javax.swing.JLabel NSerie;
    private javax.swing.JTextField NSerie_Texto;
    private javax.swing.JLabel Nome;
    private javax.swing.JTextField Nome_Texto;
    private javax.swing.JLabel Observacoes;
    private javax.swing.JTextPane Observacoes_Texto;
    private javax.swing.JButton Sair;
    private javax.swing.JMenuItem Sair_Menu;
    private javax.swing.JMenu Sobre;
    private javax.swing.JComboBox Status_Texto;
    private javax.swing.JLabel Tel1;
    private javax.swing.JTextField Tel1_Texto;
    private javax.swing.JLabel Tel2;
    private javax.swing.JTextField Tel2_Texto;
    private javax.swing.JLabel ValidadeGarantia;
    private com.toedter.calendar.JDateChooser ValidadeGarantia_Texto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    // End of variables declaration//GEN-END:variables
private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("manutencao.png")));
    }

    class hora implements ActionListener {

        public void actionPerformed(ActionEvent e) {
            Calendar now = Calendar.getInstance();
            String HoraAtual = String.format("%1$tH%1$tM%1$tS", now);
        }
    }

}
